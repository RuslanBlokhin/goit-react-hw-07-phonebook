{"version":3,"sources":["components/contactList/contactListItem/ContactsListItem.module.css","components/container/Container.module.css","components/contactList/ContactsList.module.css","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-operations.js","redux/phoneBook/phoneBook-selectors.js","components/form/Form.js","components/filter/Filter.js","components/container/Container.js","components/contactList/ContactList.js","components/contactList/contactListItem/ContactListItem.js","components/App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterUpdate","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","error","id","delete","a","get","getFilter","state","contacts","FilterReducer","getAllContacts","ContactsReducer","getFilteredContact","createSelector","filter","normalizedFilter","toLowerCase","includes","initialState","Form","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","items","some","alert","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","className","style","button","React","Component","PropsType","func","isRequired","connect","contactsSelectors","contactOperations","actions","target","Container","children","container","ContactsList","contactList","prototype","PropTypes","node","ContactListItem","onDeleteContact","map","contactItem","buttonDel","onClick","arrayOf","shape","string","App","fetchContact","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBookReducer","devToolss","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5125e107.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactsListItem_contactItem__zarTu\",\"buttonDel\":\"ContactsListItem_buttonDel__3dgYJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3gaps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__1_9MH\"};","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction(\r\n  'contacts/contacts/addContactRequest',\r\n);\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterUpdate = createAction('app/changeFilter');\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phoneBook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContact,\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.FilterReducer;\r\nconst getAllContacts = state => state.contacts.ContactsReducer;\r\n\r\nconst getFilteredContact = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    if (filter) {\r\n      return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    }\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport default {\r\n  getFilter,\r\n  getAllContacts,\r\n  getFilteredContact,\r\n};\r\n","import React from 'react';\r\nimport style from './Form';\r\nimport shortid from 'shortid';\r\nimport PropsType from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactOperations from '../../redux/phoneBook/phoneBook-operations';\r\nimport contactsSelectors from '../../redux/phoneBook/phoneBook-selectors';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const hasContacts = contact =>\r\n      contact.name === this.state.name || contact.number === this.state.number;\r\n\r\n    if (this.props.items.some(hasContacts)) {\r\n      alert(`Contact is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button className={style.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.PropsType = {\r\n  onSubmit: PropsType.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(contactOperations.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phoneBook/phoneBook-actions';\r\nimport contactsSelectors from '../../redux/phoneBook/phoneBook-selectors';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <h3>Find contacts by name</h3>\r\n    <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.filterUpdate(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import style from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n// import ContactListItem from './contactListItem/ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactsList.module.css';\r\n\r\n// import { connect } from 'react-redux';\r\n// import contactsAction from '../../redux/phoneBook/phoneBook-actions';\r\n\r\nconst ContactsList = ({ children }) => {\r\n  return (\r\n    <ul className={style.contactList}>\r\n      {children}\r\n      {/* {findContact().map(({ id, name, number }) => {\r\n        return (\r\n          <ContactListItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })} */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.prototype = {\r\n  children: PropTypes.node,\r\n};\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport style from './ContactsListItem.module.css';\r\nimport contactOperations from '../../../redux/phoneBook/phoneBook-operations';\r\nimport contactsSelectors from '../../../redux/phoneBook/phoneBook-selectors';\r\n\r\nconst ContactListItem = ({ onDeleteContact, contacts }) => (\r\n  <>\r\n    {contacts.map(({ id, name, number }) => {\r\n      return (\r\n        <li key={id} className={style.contactItem}>\r\n          {name}: {number}\r\n          <button\r\n            className={style.buttonDel}\r\n            type=\"submit\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    })}\r\n  </>\r\n);\r\n\r\nContactListItem.prototype = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\n// const findContact = (allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   if (filter) {\r\n//     return allContacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n//   }\r\n//   return allContacts;\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContact(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport Form from './form/Form.js';\r\nimport Filter from './filter/Filter';\r\nimport { connect } from 'react-redux';\r\nimport Container from './container/Container';\r\nimport ContactsList from './contactList/ContactList';\r\nimport contactOperations from '../redux/phoneBook/phoneBook-operations';\r\nimport ContactsListItem from './contactList/contactListItem/ContactListItem';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>PhoneBook</h1>\r\n        <Form />\r\n\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactsList>\r\n            <ContactsListItem />\r\n          </ContactsList>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContact: () => dispatch(contactOperations.fetchContact()),\r\n});\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  // addContactRequest,\r\n  addContactSuccess,\r\n  // addContactError,\r\n  // deleteContactRequest,\r\n  deleteContactSuccess,\r\n  // deleteContactError,\r\n  filterUpdate,\r\n  // fetchContactRequest,\r\n  fetchContactSuccess,\r\n  // fetchContactError,\r\n} from './phoneBook-actions';\r\n\r\nconst ContactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const loading = createReducer(false, {\r\n//   [fetchContactRequest]: () => true,\r\n//   [fetchContactSuccess]: () => false,\r\n//   [fetchContactError]: () => false,\r\n//   [addContactRequest]: () => true,\r\n//   [addContactSuccess]: () => false,\r\n//   [addContactError]: () => false,\r\n//   [deleteContactRequest]: () => true,\r\n//   [deleteContactSuccess]: () => false,\r\n//   [deleteContactError]: () => false,\r\n// });\r\n\r\nconst FilterReducer = createReducer('', {\r\n  [filterUpdate]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  ContactsReducer,\r\n  FilterReducer,\r\n  // loading,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phoneBookReducer,\r\n  },\r\n  middleware,\r\n  devToolss: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App.js';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}